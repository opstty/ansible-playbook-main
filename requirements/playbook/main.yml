---

- name: "Preriquisites management"
  hosts: localhost
  gather_facts: false
  tasks:
    - name: "Retrieve Ansible Galaxy requirements"
      ansible.builtin.find:
        paths: "../sources/"
        patterns: "requirements.yml,requirements.yaml"
        recurse: true
      register: _ansible_galaxy_requirements_list

    - name: "Retrieve Ansible Galaxy collections python requirements"
      ansible.builtin.find:
        paths: "../sources/"
        patterns: "requirements.txt"
        recurse: true
      register: _ansible_galaxy_collections_python_requirements_list

    - name: "Install Ansible Galaxy collections python requirements"
      ansible.builtin.pip:
        requirements: "{{ playbook_dir }}/{{ item.path }}"
        extra_args: --user
      loop: "{{ _ansible_galaxy_collections_python_requirements_list.files }}"
      loop_control:
        label: "{{ item.path }}"

    - name: "Install Ansible Galaxy collections"
      ansible.builtin.command: ansible-galaxy collection install --collections-path ../../collections/ --requirements-file {{ item.path }} --force
      loop: "{{ _ansible_galaxy_requirements_list.files }}"
      loop_control:
        label: "{{ item.path }}"
      register: _ansible_galaxy_collections_install_command
      changed_when: _ansible_galaxy_collections_install_command.rc != 0

    - name: "Install Ansible Galaxy roles"
      ansible.builtin.command: ansible-galaxy role install --roles-path ../../roles/ --role-file {{ item.path }} --force
      loop: "{{ _ansible_galaxy_requirements_list.files }}"
      loop_control:
        label: "{{ item.path }}"
      register: _ansible_galaxy_roles_install_command
      changed_when: _ansible_galaxy_roles_install_command.rc != 0
      when: "not (git | default('False')) | bool"

    - name: "Enable GIT for roles"
      when: "(git | default('False')) | bool"
      block:
        - name: "Purge `roles` directory"
          ansible.builtin.file:
            path: "../../roles/"
            state: absent

        - name: "Create `roles` directory"
          ansible.builtin.file:
            path: "../../roles/"
            state: directory
            mode: '0755'

        - name: "Create `roles/.gitignore` file"
          ansible.builtin.copy:
            dest: "../../roles/.gitignore"
            mode: '0744'
            content: |
              # Ignore everything in this directory
              *
              # Except this file
              !.gitignore

        - name: "Include `git.yml` tasks"
          ansible.builtin.include_tasks: git.yml
          loop: "{{ _ansible_galaxy_requirements_list.files }}"
          loop_control:
            label: "{{ item.path }}"
